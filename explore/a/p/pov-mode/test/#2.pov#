// CSG union, add all of shapes 1...N
union {
  Shape1 {...}
  Shape2 {...}
  ShapeN {...}
}
// vector functions
/*
#declare X=vaxis_rotate(A,B,F); // rotate A about B by F
#declare X=vcross(A,B);         // cross product of A and B
#declare X=vdot(A,B);           // dot product of A and B
#declare X=vrotate(A,B);        // rotate A about origin by B
#declare X=vnormalize(A);       // normalize vector A
#declare X=vturbulence(Lambda,Omega,Octaves, A);
                                // X+A gives a turbulated version of A
*/
// set global atmospheric fog effect in the scene.
// at the fog distance, there will be 63% visibility
fog {
  fog_type 1               // 1=constant, 2=ground_fog
  distance 10
  color Gray               // can also have 'filter' and 'transmit'
  // (---turbulence---)
  //turbulence <0.5, 0.5, 1.0>
  //turb_depth 0.5
  //omega 0.5
  //lambda 2.0
  //octaves 6
  // (---ground fog---)
  //fog_offset 0.5         // height of constant fog
  //fog_alt 0.5            // at fog_offset+fog_alt: density=25%
}
// arbitrary X,Y FINITE (no CSG) shape
// A complex example for a polygon is the letter "P":
polygon {
  12, // number of points
  <0, 0>, <0, 6>, <4, 6>, <4, 3>, <1, 3>, <1, 0>, <0, 0>, // list of <u,v> points
  <1, 4>, <1, 5>, <3, 5>, <3, 4>, <1, 4>
}
